
profile=high-quality # mpv --show-profile=gpu-hq
vo=gpu-next # GPU-Next: https://github.com/mpv-player/mpv/wiki/GPU-Next-vs-GPU
gpu-api=vulkan
hwdec=auto-copy-safe
# video-sync=display-resample

# Editor
scale=ewa_lanczos4sharpest
cscale=ewa_lanczos4sharpest
dscale=ewa_robidoux
glsl-shaders=~~home/shaders/nnedi3-nns256-win8x4.hook

alang=jpn,ja,chi,zh,zho,enm,eng,en,enUS,en-US,enAU,en-AU,und,undefined
audio-file-auto=fuzzy

slang=jpn,ja,chi,zh,zho,enm,eng,en,enUS,en-US,enAU,en-AU,und,undefined
sub-auto=fuzzy
sub-font="Noto Sans"
osd-font="Noto Sans"

screenshot-format=png
screenshot-png-compression=9
audio-exclusive=yes
keep-open=yes
reset-on-next-file=audio-delay,mute,pause,speed,sub-delay,video-aspect-override,video-pan-x,video-pan-y,video-rotate,video-zoom,volume


##############
# Colorspace #
##############

# Only specify this if the screen is actually at it
# target-peak=400
target-peak=auto
hdr-compute-peak=yes

target-prim=auto
# target-prim=bt.709 # target Rec.709 for SDR TVs
# target-prim=bt.2020 # target Rec.2020 (wide color gamut) for HDR TVs
tone-mapping=bt.2446a
target-trc=auto
vf=format=colorlevels=full:colormatrix=auto
video-output-levels=full
#Luma upscale deringing (Higher = Less rining, but more detail loss)
scale-antiring=0.5

#Luma downscale deringing (Higher = Less rining, but more detail loss)
dscale-antiring=0.5

#Chroma upscale deringing (Higher = Less rining, but more detail loss)
cscale-antiring=0.5

icc-profile=~~home/rtings-icc-profile-dell.icm

blend-subtitles=no
sub-ass-vsfilter-blur-compat=no # Backward compatibility for vsfilter fansubs
sub-ass-scale-with-window=no # May have undesired effects with signs being misplaced.
sub-auto=fuzzy
# sub-gauss=0.6					# Some settings fixing VOB/PGS subtitles (creating blur & changing yellow subs to gray)
sub-file-paths-append=ass # search for external subs in these relative subdirectories
sub-file-paths-append=srt
sub-file-paths-append=sub
sub-file-paths-append=subs
sub-file-paths-append=subtitles
demuxer-mkv-subtitle-preroll=yes # try to correctly show embedded subs when seeking
embeddedfonts=yes # use embedded fonts for SSA/ASS subs
sub-fix-timing=no # do not try to fix gaps (which might make it worse in some cases). Enable if there are scenebleeds.
sub-font-size=60
sub-past-video-end

#Deband steps (More = Better quality, but higher GPU cost)
deband-iterations=4

#Deband strength (More = Less banding, but more detail loss)
deband-threshold=48

#Deband range (More = Less banding, but higher GPU cost)
deband-range=24

#Dynamic Grain (More = More dynamic grain)
#Set it to "0" in case you prefer the static grain shader or don't like grain
deband-grain=16

#Use "auto" (default) or "8"/"10"/"12" depending on your display bitdepth
#Can lead to ugly outputs when you set the wrong number or disable it entirely
dither-depth=auto

#Selects the dithering algorithm
#Use "fruit" (8-Bit/8-Bit+FRC display), "ordered" (true 10-Bit/12-Bit display) or "error-diffusion" with high-end GPUs
dither=fruit

#Selects the kernel in case of error-diffusion
#"sierra-lite" is the fastest decent choice, reasonable alternatives are "floyd-steinberg" or "atkinson" 
error-diffusion=sierra-lite

#Luma
glsl-shader="~~home/shaders/noise_static_luma.hook"

#Chroma
glsl-shader="~~home/shaders/noise_static_chroma.hook"

############
# Profiles #
############
[vrr-frame-quadruple]
profile-desc=vrr-frame-quadruple
profile-cond=math.floor(container_fps) >= 6 and math.floor(container_fps) < 19
profile-restore=copy-equal
vf-append=fps=source_fps*4
video-sync=audio

[vrr-frame-tripling]
profile-desc=vrr-frame-tripling
profile-cond=math.floor(container_fps) >= 20 and math.floor(container_fps) <= 50
profile-restore=copy-equal
vf-append=fps=source_fps*3
video-sync=audio

[vrr-frame-doubling]
profile-desc=vrr-frame-doubling
profile-cond=math.floor(container_fps) > 50 and math.ceil(container_fps) < 80
profile-restore=copy-equal
vf-append=fps=source_fps*2
video-sync=audio

[vrr-singe-frame]
profile-desc=vrr-singe-frame
profile-cond=math.floor(container_fps) >= 81 and math.ceil(container_fps) < 165
profile-restore=copy-equal
video-sync=audio


[4k60]
profile-desc=4k60
profile-cond=((width ==3840 and height ==2160) and p["estimated-vf-fps"]>=31)
profile=vrr-frame-doubling
deband=no # turn off debanding because presume wide color gamut
profile-restore=copy-equal
interpolation=no # turn off interpolation because presume 60fps
glsl-shaders="~~home/shaders/CfL_Prediction.glsl" # UHD videos are YUV420 so chroma upscaling is needed
# UHD videos are already 4K so no luma upscaling is needed
interpolation=no # no motion interpolation is required

[4k30]
profile-cond=((width ==3840 and height ==2160) and p["estimated-vf-fps"]<31)
profile=vrr-frame-tripling
deband=no # turn off debanding because presume wide color gamut
profile-restore=copy-equal
glsl-shaders="~~home/shaders/CfL_Prediction.glsl"  # UHD videos are YUV420 so chroma upscaling is needed

[full-hd60]
profile-desc=full-hd60
profile-cond=(((width ==1920 and height ==1080 or (width ==1440 and height ==1080))) and not p["video-frame-info/interlaced"] and p["estimated-vf-fps"]>=31)
profile=vrr-frame-doubling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-lite-ar-r4.hook" # luma upscaling (doubler)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
interpolation=no # no motion interpolation is required
# no deinterlacer required because presume progressive


[23as30fps]
profile-desc=23as30fps
profile-cond='(p["estimated-vf-fps"] == 30 or p["container-fps"] == 30) and (filename:match("SubsPlease") or filename:match("Erai%-raws") or filename:match("Tsundere%-Raws") or filename:match("%-VARYG") or filename:match("HorribleSubs") or filename:match("SubsPlus%+")) and not p["video-frame-info/interlaced"]'
vf=lavfi=[fps=30000/1001,decimate,fps=24000/1001]
profile=vrr-frame-doubling


[simulcast]
profile-desc="simulcast anime"
profile-cond='(filename:match("SubsPlease") or filename:match("Erai%-raws") or filename:match("Tsundere%-Raws") or filename:match("%-VARYG") or filename:match("HorribleSubs") or filename:match("SubsPlus%+")) and not p["video-frame-info/interlaced"] and p["estimated-vf-fps"]<31'
profile=full-hd30
sub-fix-timing=yes
sub-ass-override=force

[full-hd30]
profile-desc=full-hd30
profile-cond=(((width ==1920 and height ==1080 or (width ==1440 and height ==1080))) and not p["video-frame-info/interlaced"] and p["estimated-vf-fps"]<31)
profile=vrr-frame-tripling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-lite-ar-r4.hook" # luma upscaling (doubler)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
# apply motion interpolation
# no deinterlacer required because presume progressive
deband=yes

[full-hd-interlaced]
profile-desc=full-hd-interlaced
profile-cond=(((width ==1920 and height ==1080 or (width ==1440 and height ==1080))) and p["video-frame-info/interlaced"] and p["estimated-vf-fps"]<31)
profile=vrr-frame-tripling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-lite-ar-r4.hook" # luma upscaling (doubler)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
# apply motion interpolation
vf=bwdif=mode=1 # apply FFMPEGs bwdif deinterlacer
deband=yes

[hd]
profile-desc=hd
profile-cond=((width ==1280 and height ==720) or (width ==960 and height ==720))
profile=vrr-frame-tripling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-zoom-ar-r3.hook" # luma upscaling (fractional)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
interpolation=no # no motion interpolation is required
# no deinterlacer is required
deband=yes

[sdtv-ntsc]
profile-desc=sdtv-ntsc
profile-cond=((width ==640 and height ==480) or (width ==704 and height ==480) or (width ==720 and height ==480))
profile=vrr-frame-tripling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-zoom-ar-r3.hook" # luma upscaling (fractional)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
# apply motion interpolation
vf=bwdif=mode=1 # apply FFMPEGs bwdif deinterlacer
deband=yes

[sdtv-pal]
profile-desc=sdtv-pal
profile-cond=((width ==352 and height ==576) or (width ==480 and height ==576) or (width ==544 and height ==576) or (width ==720 and height ==576))
profile=vrr-frame-tripling
profile-restore=copy-equal
glsl-shaders="~~home/shaders/ravu-zoom-ar-r3.hook" # luma upscaling (fractional)
glsl-shaders-append="~~home/shaders/CfL_Prediction.glsl"  # HD videos are YUV420 so chroma upscaling is needed
# apply motion interpolation
vf=bwdif=mode=1 # apply FFMPEGs bwdif deinterlacer
deband=yes

[8bitDeband]
profile-cond=p["video-params/pixelformat"] == "yuv420p"
deband=yes
profile-restore=copy-equal

[Only420chromaUpscale]
profile-desc=cond:((p["video-params/pixelformat"] == "yuv420p10" or p["video-params/pixelformat"] == "yuv420p"))
glsl-shader="C:\mpv\Shaders\KrigBilateral.glsl"
profile-restore=copy-equal

[not1080pbut720pOrHigher]
profile-desc=cond:((p["video-params/h"] >= 720 and p["video-params/h"] < 1080))
glsl-shader="C:\mpv\Shaders\FSRCNN_x2_r2_16-0-2.glsl"
profile-restore=copy-equal

[WebdlDeband]
profile-cond=string.match(p.filename, "%[Web%-DL%]")~=nil
deband=yes
profile-restore=copy-equal

[Dolby Vision]
target-colorspace-hint=yes
target-trc=pq
profile-restore=copy-equal
